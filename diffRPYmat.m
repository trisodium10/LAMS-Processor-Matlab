function [dTdroll,dTdpitch,dTdyaw] = diffRPYmat(phiR,thetaP,psiY)
% [dTdroll,dTdpitch,dTdyaw] = diffRPYmat(phiR,thetaP,psiY)
% Computes the derivative of the RPY matrix with respect to
% roll, pitch and yaw

dTdroll = [0, cos(phiR)*cos(psiY)*sin(thetaP)+sin(phiR)*sin(psiY), -cos(psiY)*sin(thetaP)*sin(phiR)+cos(phiR)*sin(psiY);...
    0, -cos(psiY)*sin(phiR)+cos(phiR)*sin(thetaP)*sin(psiY), -cos(phiR)*cos(psiY)-sin(thetaP)*sin(phiR)*sin(psiY);...
    0, cos(thetaP)*cos(phiR), -cos(thetaP)*sin(phiR)];
dTdpitch = [-cos(psiY)*sin(thetaP), cos(thetaP)*cos(psiY)*sin(phiR), cos(thetaP)*cos(phiR)*cos(psiY); ...
    -sin(thetaP)*sin(psiY), cos(thetaP)*sin(phiR)*sin(psiY), cos(thetaP)*cos(phiR)*sin(psiY); ...
    -cos(thetaP), -sin(thetaP)*sin(phiR), -cos(phiR)*sin(thetaP)];
dTdyaw = [-cos(thetaP)*sin(psiY), -cos(phiR)*cos(psiY)-sin(thetaP)*sin(phiR)*sin(psiY), cos(psiY)*sin(phiR)-cos(phiR)*sin(thetaP)*sin(psiY); ...
    cos(thetaP)*cos(psiY), cos(psiY)*sin(thetaP)*sin(phiR)-cos(phiR)*sin(psiY), cos(phiR)*cos(psiY)*sin(thetaP)+sin(phiR)*sin(psiY); ...
    0,0,0];